import React, { useEffect, useState } from 'react';
import { useQueries, useQuery, UseQueryResult } from '@tanstack/react-query';
import { doc, getDoc, setDoc, DocumentData } from 'firebase/firestore';
import type { NextPage } from 'next';
import Head from 'next/head';
import { PerformanceBarChart, StocksOverview } from '../components';
import { Stock } from '../components/types';
import { database } from '../config/firebase';
import { useAuth } from '../hooks';

const getFinanceChart = async (ticker: string) => {
  const response = await fetch(
    `${process.env.NEXT_PUBLIC_CORS_PROXY}https://query1.finance.yahoo.com/v8/finance/chart/${ticker}?interval=1d&range=1y`
  );

  if (!response.ok) {
    throw new Error('Oops an error occurred!');
  }

  return response.json();
};

const Home: NextPage = () => {
  // const [name, setName] = useState('');
  // const [age, setAge] = useState('');
  // const [info, setInfo] = useState<DocumentData | undefined>();
  // const docRef = doc(database, 'CRUD Data', '1');
  //
  // const { user } = useAuth();
  //
  // console.log('index - currentUser:', user);

  // this should come from firebase
  const stocks = [
    { name: 'AbbVie', ticker: 'ABBV.VI' },
    { name: 'Allianz', ticker: 'ALV.DE' },
    { name: 'BASF', ticker: 'BAS.DE' },
    { name: 'British American Tobacco', ticker: 'BMT.DE' },
    { name: 'Starbucks', ticker: 'SRB.F' }
  ];

  const stockQueries = useQueries({
    queries: stocks.map((stock) => {
      return {
        queryKey: ['stocks', stock.ticker],
        placeholderData: { ...stock },
        queryFn: () => getFinanceChart(stock.ticker),
        staleTime: 1000 * 60 * 15,
        cacheTime: 1000 * 60 * 15,
        select: (data) => ({
          ticker: stock.ticker,
          name: stock.name,
          price: data.chart?.result[0].meta.regularMarketPrice
        })
      };
    })
  });

  // useEffect(() => {
  //   const queries = new Map<string, UseQueryResult>();
  //
  // }, [])
  //
  // tickers.map((ticker) => {
  //   queries.set()
  // })

  // const { data } = useQuery([tickers[1]], getFinanceChart, {
  //   staleTime: 1000 * 60 * 15,
  //   cacheTime: 1000 * 60 * 15
  // });

  console.log('stockQueries:', stockQueries);
  //
  // useEffect(() => {
  //   getData();
  // }, []);

  // const setData = async () => {
  //   const res = await setDoc(docRef, {
  //     name: name,
  //     age: Number(age)
  //   });
  //
  //   setName('');
  //   setAge('');
  //   getData();
  // };
  //
  // const getData = async () => {
  //   const res = await getDoc(docRef);
  //
  //   setInfo(res.data());
  // };

  return (
    <>
      <Head>
        <title>Dip Finder</title>

        <meta name="description" content="Generated by create next app" />
      </Head>

      <>
        {/*<h1>Home</h1>*/}

        {/*<input*/}
        {/*  type="text"*/}
        {/*  value={name}*/}
        {/*  placeholder="Name"*/}
        {/*  onChange={(e) => setName(e.target.value)}*/}
        {/*/>*/}
        {/*<input*/}
        {/*  type="number"*/}
        {/*  value={age}*/}
        {/*  placeholder="Age"*/}
        {/*  onChange={(e) => setAge(e.target.value)}*/}
        {/*/>*/}
        {/*<button onClick={setData}>Add</button>*/}
        {/*<p>Name: {info?.name}</p>*/}
        {/*<p>Age: {info?.age}</p>*/}
        <StocksOverview queries={stockQueries} />
        <PerformanceBarChart stocks={[]} />
      </>
    </>
  );
};

export default Home;
